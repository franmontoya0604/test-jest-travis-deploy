{"version":3,"sources":["context/AppContext.js","components/Header.jsx","components/Footer.jsx","components/Layout.js","components/Product.jsx","components/Products.jsx","pages/Home.jsx","pages/Information.jsx","utils/index.js","pages/Checkout.jsx","pages/Payment.jsx","components/Map.jsx","hooks/useGoogleAdress.js","pages/Success.jsx","pages/NotFound.js","initialState.js","hooks/useInitialState.js","App.js","index.js"],"names":["AppContext","React","createContext","Header","cart","useContext","className","to","length","Footer","Layout","props","Fragment","children","Product","product","handleAddToCart","src","image","url","alt","title","price","description","type","onClick","Products","addToCart","products","map","key","id","Home","Helmet","name","content","property","Information","state","addToBuyer","form","useRef","history","useHistory","ref","placeholder","formData","FormData","current","buyer","get","push","item","i","HandleSumTotal","reduce","accumulator","currentValue","Checkout","removeFromCart","handleRemove","Payments","addNewOrder","amount","buttonStyles","shape","layout","paypalOptions","clientId","intent","currency","onButtonReady","console","log","onSuccess","details","data","status","payer","given_name","newOrder","payment","handlePaymentSucces","onError","error","onCancel","Map","center","lat","latitude","lng","longitude","useJsApiLoader","googleMapsApiKey","isLoaded","mapContainerStyle","width","height","zoom","position","useGoogleAdress","address","useState","setMap","API","useEffect","a","fetch","response","json","info","fetchData","Success","NotFound","initialState","useInitialState","setState","setProducts","useLayoutEffect","axios","apiCall","payload","indexToRemove","filter","items","indexCurrent","order","App","isEmpty","Object","keys","Provider","value","exact","path","component","Payment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b28f204.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst AppContext = React.createContext({})\n\n\nexport default AppContext;","import React,{useContext} from 'react'\nimport './styles/header.css'\nimport {Link} from 'react-router-dom'\nimport AppContext from '../context/AppContext' //asi traemos el contexto y lo indicamos en useContext\n\n\n\nconst Header = () =>{\n\n  const {cart} = useContext(AppContext);//traemos la funcion para gregar  al carrito y el estado que vamos a utilizar. cada ves que se use estos se actualiza.\n\n\n    return (\n        <nav className=\"navbar navbar-light bg-light  container-fluid\">\n          <h2 className=\"Header-title\">Platzi Store</h2>\n  <h2>\n  <Link to='/' >  proyecto react con hooks</Link>\n   </h2>\n   <div className=\"Header-checkout\">\n    <Link to='/checkout'> \n     <i className=\"fas fa-shopping-basket \"></i>\n     </Link> \n     {cart.length > 0  && <div className=\"Header-alert\">{cart.length} </div>} {/*a esto no lo ejecuta el shallow */}\n     </div>\n  \n</nav>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './styles/footer.css'\n\n\nfunction Footer() {\n    return (\n        <div className=\"bg-secondary Footer container-fluid mt-5\">\n           \n            <h2 className=\"Footer-title\">proyecto hooks</h2>\n            \n            <h2 className=\"Footer-copy\">derechos reservados de fran</h2>\n           \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction Layout(props) {//layout recibe props , el que vamos utilizar es childhen.\n  // const children = props.children;\n\n  return (\n    <React.Fragment >{/*es porque tiene que devolver una cosa y para no poner un div ponemos react.fragment.*/}\n      <Header/>{/*header va a aparecer en todas las spaginas que se incluya layout.*/}\n      {props.children}{/*aca mostramos todo el contenido de los hijos de layout qu esten renderizados*/}\n      <Footer/>\n    </React.Fragment>\n  );\n}//layout funciona como hacemos en este proyecto con el carousel y categories que utiliza el contenido de sus hijos\n\nexport default Layout;\n","import React from 'react'\nimport './styles/products.css'\n\n\nconst Product = ({product,handleAddToCart}) => {\n    return (\n        <div className=\"Products-item\">\n            <img src={`http://localhost:1337${product.image[0].url}`} alt={product.title}/> {/*asi accedemos a la imagen desde strapi */}\n            <div className=\"Products-item-info\">\n<h2 >{product.title}\n    <span>$ {' '} {product.price}</span>\n</h2>\n    <p>{product.description}</p>\n     <button type=\"button\" onClick={handleAddToCart(product)}>añadir al carro</button> {/*al tocar se activa la funcioon y se le pasa el producto a añadir */}\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","import React,{useContext} from 'react'\nimport Product from './Product'\nimport './styles/products.css'\nimport AppContext from '../context/AppContext' //asi traemos el contexto y lo indicamos en useContext\n\nconst Products = () => {\n    const {addToCart,products} = useContext(AppContext);//traemos la funcion para gregar  al carrito y el estado que vamos a utilizar. cada ves que se use estos se actualiza.\n   \n   \n   const handleAddToCart = (product)=>()=>{//esta funcion maneja para añadir ele producto a el carrito, se hace funcion de una funcion para poder manejarlo.\naddToCart(product)//usamos la funcion del context que mdifica el state.\n   }\n\n    return (\n        <div className=\"Products container\">\n            <div className=\"Products-items\">\n            {products.length > 0 ? (products.map(product=>(//hacemos mapeo de un componente\n            <Product key={product.id} product={product} handleAddToCart={handleAddToCart}/>//le pasamos los product qu enos pasa home por el momento ya que tenemos que usar context y no los props. le pasamos la funcion mpara manejar el addtocart.\n\n    )) ) : <div> cargando...</div> }\n            </div>\n           \n        </div>\n    )\n}\n\nexport default Products\n","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport Products from '../components/Products';\n\n\nconst Home = () => {\n    return (\n        <> {/*esto es react fragment*/}\n    \n    <Helmet><title>platzi conf merch - productos</title>\n    \n    <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n    <meta name=\"twitter:site\" content=\"@TU_USER\"/>\n    <meta name=\"twitter:creator\" content=\"@TU_USER\"/>\n    <meta name=\"twitter:title\" content=\"Platzi Conf Store\"/>\n    <meta name=\"twitter:description\" content=\"Platzi Conf Store\"/>\n    <meta\n      name=\"twitter:image\"\n      content=\"https://s3.amazonaws.com/gndx.dev/gndxdev.png\"\n    />\n    <meta property=\"og:title\" content=\"Platzi Conf Store\"/>\n    <meta property=\"og:description\" content=\"Platzi Conf Store\"/>\n    <meta\n      property=\"og:image\"\n      content=\"https://s3.amazonaws.com/gndx.dev/gndxdev.png\"\n    />\n    <meta property=\"og:url\" content=\"platzistore.xyz\" />\n    <meta property=\"og:site_name\" content=\"Platzi Conf Store\" />\n    <meta property=\"og:locale\" content=\"es_ES\" />\n    <meta property=\"og:type\" content=\"article\" />\n    <meta property=\"fb:app_id\" content=\"ID_APP_FACEBOOK\" />\n    \n    \n    </Helmet>\n    \n           <Products /> {/*  le pasamos como prop los productos del estado inicial */}\n\n\n        </>\n    )\n}\n\nexport default Home\n","import React,{useContext,useRef} from 'react';\nimport './styles/Information.css';\nimport {Link,useHistory} from 'react-router-dom'\nimport AppContext from '../context/AppContext'\n\n\nconst Information = () => {\n\n  const {state,addToBuyer} = useContext(AppContext);//vamos a crear una funcion nueva.\nconst form = useRef(null)//usamos el ref para guardar la info del formulariio. y darle una referencia a los input ademas de mo usar los enventos.\n\n  const {cart} = state;\n\nconst history = useHistory();\n\nconst handleSubmit = () =>{// se pone funcion dentro de una funcion cuand ohay argumentos.\n  const formData = new FormData(form.current);//aca creamos el formData que es la info que obtenemos del formulario usando el ref form.current.\n  const buyer = {\n    'name': formData.get('name'),//asi guardamos en un objeto toda la info de cada input con su name\n    'email': formData.get('email'),\n    'address': formData.get('address'),\n    'apto': formData.get('apto'),\n    'city': formData.get('city'),\n    'country': formData.get('country'),\n    'state': formData.get('state'),\n    'cp': formData.get('cp'),\n    'phone': formData.get('phone'),\n  }\n  addToBuyer(buyer);//y aaca le pasamos el objeto con la info del formulario  para guardalos en un array en el context.\n  history.push('/checkout/payment') //con esto nos enviamos a la pagina escrita ahi, luego de ejecutar la funcion handleSubmit\n}\n\n  return (\n    <div className=\"container\">\n      <div className=\"Information-content\">\n        <div className=\"Information-head\">\n          <h2>Información de contacto:</h2>\n        </div>\n        <div className=\"Information-form\">\n          <form ref={form}> {/*asi se aplica el ref , tambien se puede hacer en cada input pero asi es mas facil cuando hay mucho, pero la mejor forma es usar reacthookform*/}\n            <input type=\"text\" placeholder=\"Nombre completo\" name=\"name\" />\n            <input type=\"text\" placeholder=\"Correo Electronico\" name=\"email\" />\n            <input type=\"text\" placeholder=\"Direccion\" name=\"address\" />\n            <input type=\"text\" placeholder=\"apto\" name=\"apto\" />\n            <input type=\"text\" placeholder=\"Ciudad\" name=\"city\" />\n            <input type=\"text\" placeholder=\"Pais\" name=\"country\" />\n            <input type=\"text\" placeholder=\"Estado\" name=\"state\" />\n            <input type=\"text\" placeholder=\"Codigo postal\" name=\"cp\" />\n            <input type=\"text\" placeholder=\"Telefono\" name=\"phone\" />\n          </form>\n        </div>\n        <div className=\"Information-buttons\">\n        <Link to='/checkout'> <div className=\"Information-back\">Regresar</div></Link>\n        <div className=\"Information-next\"> <button type=\"button\" onClick={handleSubmit}> pagar</button> </div> {/* cuando toquemos esto se activa el handlesubmit para poder guardar en el context el pedido*/}\n        </div>\n      </div>\n      <div className=\"Information-sidebar\">\n      {cart.length > 0 ? <h3>Pedidos:</h3> : <h3>no hay pedidos</h3>}\n        {cart.map((item,i) =>(\n        <div className=\"Information-item\" key={i}>\n          <div className=\"Information-element\">\n        <h4>{item.title}</h4>\n            <span>{item.price}</span>\n          </div>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Information;","import {useContext} from 'react';\nimport AppContext from '../context/AppContext'\n\n\n\n\nconst HandleSumTotal = () => {//esta funcion es para hacer la suma de los precios de los pedidos del carritos\n    const {state} = useContext(AppContext);\nconst {cart} = state;\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.price;//este es el reducer o acumulador que le pasamos a la funcion reduce\n    const sum = cart.reduce(reducer, 0);//aca la funcion reduce va a hacer la suma de los precios de los productos que esten en el carro.\n    return sum;\n  }\n\n  export default HandleSumTotal","import React,{useContext} from 'react';\nimport './styles/Checkout.css';\n\nimport {Link} from 'react-router-dom'\nimport AppContext from '../context/AppContext'\nimport HandleSumTotal from '../utils/index'\n\n\nconst Checkout = () => {\n\n  const {state,removeFromCart} = useContext(AppContext);\n\n  const {cart} = state;\n\n  const handleRemove = (product, i) => ()=>{ //se pone asi como una funcion dentro de otra funcion, se usa asi para llamar a funciones que vienen del contexto.\nremoveFromCart(product, i)//esta funcion hadnle recibe el producto que queremos eliminar del carrito.\n  }\n\n \n\n  return (\n\n    \n\n    <div className=\"container\">  {/* aca vamos a mostrar el pedido completo con su precios.*/}\n      <div className=\"Checkout-content\">\n       {cart.length > 0 ? <h3>Lista de Pedidos:</h3> : <h3>no hay pedidos</h3>}\n       \n        \n        {cart.map((product,i)=>(\n         \n           <div className=\"Checkout-item\"  key={i}>\n          <div className=\"Checkout-element\">\n           \n        <h4>{product.title}</h4>\n        <span>{product.price}</span> \n           \n          </div>\n         \n          <button type=\"button\" onClick={handleRemove(product, i)}><i className=\"fas fa-trash-alt\"></i></button>\n          </div>\n        ))}\n       \n      </div>\n{cart.length > 0 && ( <div className=\"Checkout-sidebar\">\n        <h3>{`Precio Total: $ ${HandleSumTotal()}`}</h3>\n       <Link to='/checkout/information'> <button type=\"button\">Continuar pedido</button></Link>\n      </div>)}\n\n     \n    </div>\n  );\n};\n\nexport default Checkout;","import React,{useContext} from 'react';\nimport './styles/Payment.css';\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport AppContext from '../context/AppContext'\nimport HandleSumTotal from '../utils/index'\nimport {useHistory} from 'react-router-dom'\n\n\nconst Payments = () => {\n  const {state} = useContext(AppContext);\n  const {cart,buyer,addNewOrder} = state;\n\n  const history = useHistory();\n\n  const paypalOptions= {\n    clientId: 'sb-djlzk6746871@personal.example.com',//este es nuestro id de paypal la cuenta para traer la api rest.y donde va la plata creo a esto ha yque tenerlo oculto y una buena opcion puede ser dotenv\n    intent: 'capture',\n    currency: 'USD'\n  }\n\nconst buttonStyles= {//los styles ya vienen por defecto no hace falta cambiarlos\n  shape: 'rect',\n  layout: 'vertical'\n}\n\nconst handlePaymentSucces =  (details, data) => { //sirve para añadir una funcion cuando la transaccion este completa\n  \n  if (details.status === 'COMPLETED') {\n    console.log(\"Transaction completed by \" + details.payer.name.given_name) //mostramos un cartel de transaccion completa, details nos da la data del que compra\n \n  const newOrder = {//aca creamos la orden de la compra que vamos a guardar en nuestro backend es mejor crearla en e lservidor o base de datos con un fetch para que quede permanente ahora como no tenemos backend vamos aguardarla en el estado.\n    buyer:buyer,//este es el nombre del comprador\n    product: cart,\n    payment:data\n  }\n  \n  console.log(newOrder)\n  history.push('/checkout/success')//para enviar a la pagina siguiente donde va a aparecer el cartel que se completo\n\naddNewOrder(newOrder)//aca cuando guardamos la orden tendriamos que guardarla en un lugar seguro que se guarde de forma permantente\nconsole.log(details)\n  \n  }\n\n }\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"Payment-content\">\n        <h3>Resumen del pedido:</h3>\n        {cart.map((item,i) =>(\n        <div className=\"Information-item\" key={i}>\n          <div className=\"Information-element\">\n        <h4>{item.title}</h4>\n            <span>{item.price}</span>\n          </div>\n        </div>\n        ))}\n\n     <div className=\"Payment-button\">\n     <PayPalButton \n     //props que le pasamos a la api de paypal\n     amount={HandleSumTotal()}  //sive para saber el monto de la transacion, aca le pasamos la suma total del carrito de la compra que estan haciendo\n     buttonStyles={buttonStyles}  //para darle el estilo a los botones\n    paypalOptions={paypalOptions}  //aca puedne ir muchas propiedades para configurar\n    onButtonReady={()=>console.log(\"payment star\")} //sirve para añadir una funcion cuando se active el boton\n    onSuccess={(details,data)=> handlePaymentSucces(details,data)}\n    onError={error=> console.log(error)} //sirve para manejar el erro y mostrarlo en pantalla\n    onCancel={data=> console.log(data)} //sirve para manejar el error cuandose cancele.\n\n     />\n     </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Payments;","import React from 'react'\nimport { GoogleMap, useJsApiLoader,Marker } from '@react-google-maps/api';\n\n\n\n\n\nfunction Map({data}) {\n\n\n    const containerStyle = {\n        width: '400px',\n        height: '400px'\n      };\n      \n      const center = {\n        lat:data.latitude,\n        lng:data.longitude\n      };\n\n    const { isLoaded } = useJsApiLoader({//aca  usamos esta hook de la api para cargar nuestara clave de la api\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyB7OQEXUAudFxRIt32g5Kon0Ml7SxALOcI\"\n      })\n\n    return isLoaded ? (//aca decimos que si esta isLoaded qu es nuestra clave de la api se carga el mapa\n        <GoogleMap //este es el mapa y recibe configuarciones\n          mapContainerStyle={containerStyle}  //esto son los estilo\n          center={center} //esta la latitud de donde va aparecer el mapa\n          zoom={10}\n         // onLoad={onLoad} // esta es una funcio para configuar cuando esta cargando el map para mientras carga el mapa se haga la traduccion a lat y lng de la dirrcion del comprador para marcarlo en el mapa\n         // onUnmount={onUnmount} // y esta funcion para cuando se va el mapa \n        >\n                    <Marker position={center} />\n\n          { /* Child components, such as markers, info windows, etc. */ }\n          <></>\n        </GoogleMap>\n    ) : <></>\n}\n\nexport default Map\n","import {useState,useEffect} from 'react';\n\n\nconst useGoogleAdress = address =>{\n  const [map,setMap] = useState({});\nconst API = `http://api.positionstack.com/v1/forward?access_key=653d7887af48efa55ea24d6e3e72ad97&query=${address}`; //aca uso position stack para obtener la lat y lng del comprador\n\nuseEffect(  ()=> {\n\n async function fetchData(){\nconst response = await fetch(API);\n\nconst info = await response.json();\n\nconsole.log(info)\n\nsetMap(info.data[0]);//guardo en mpa para luego pasarlo\n }\n\n fetchData();\n},[]);\n\nreturn map;\n\n};\n\nexport default useGoogleAdress;\n","import React,{useContext} from 'react';\nimport './styles/Success.css';\nimport AppContext from '../context/AppContext'\nimport Map from '../components/Map'\nimport useGoogleAdress from '../hooks/useGoogleAdress'\n\nconst Success = () => {\n  const {state} = useContext(AppContext);\n  const {buyer} = state;\nconst address = useGoogleAdress(buyer[0].address)\n\n  return (\n    <div className=\"container\">\n      <div className=\"Success-content\">\n        <h2>{`${buyer[0].name}, Gracias por tu compra`}</h2>\n        <span>Tu pedido llegara en 3 dias a tu dirección:</span>\n        <div className=\"Success-map\">\n          <Map data={address} /> {/*aca llamamos a map y le pasamos la data que es la latitud y longitud para marcar la dirrcecion del comprador en el mapa*/}\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Success;","import React from 'react';\nimport './styles/NotFound.css'\n\nconst NotFound = () => (\n  \n  <section className=\"error\">\n    <section className=\"error__container\">\n      <h2 className=\"error__container--title\">404</h2>\n      <p>Página no encontrada</p>\n    </section>\n  </section>\n)\n\nexport default NotFound;","const initialState =  {\n    cart: [  {\n      'id': '1',\n      'image': 'https://arepa.s3.amazonaws.com/camiseta.png',\n      'title': 'Camiseta',\n      'price': 25,\n      'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n    },\n    {\n      'id': '3',\n      'image': 'https://arepa.s3.amazonaws.com/mug.png',\n      'title': 'Mug',\n      'price': 10,\n      'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n    }],\n    products: [\n      {\n        'id': '1',\n        'image': 'https://arepa.s3.amazonaws.com/camiseta.png',\n        'title': 'Camiseta',\n        'price': 25,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n      {\n        'id': '3',\n        'image': 'https://arepa.s3.amazonaws.com/mug.png',\n        'title': 'Mug',\n        'price': 10,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n      {\n        'id': '4',\n        'image': 'https://arepa.s3.amazonaws.com/pin.png',\n        'title': 'Pin',\n        'price': 4,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n      {\n        'id': '5',\n        'image': 'https://arepa.s3.amazonaws.com/stickers1.png',\n        'title': 'Stickers',\n        'price': 2,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n      {\n        'id': '6',\n        'image': 'https://arepa.s3.amazonaws.com/stickers2.png',\n        'title': 'Stickers',\n        'price': 2,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n      {\n        'id': '7',\n        'image': 'https://arepa.s3.amazonaws.com/hoodie.png',\n        'title': 'Hoodie',\n        'price': 35,\n        'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n      },\n    ],\n  };\n  \n  export default initialState;","import {useLayoutEffect,useState} from 'react'\nimport initialState from '../initialState'\nimport axios from 'axios';\n\n\nconst API = \"http://localhost:1337/products\"; //esta es la api de strapi\n\nconst useInitialState= ()=> {//este hook devuelve las funciones que tiene dentro y el state para luego tenerlos en el context.\n  const [state,setState] = useState(initialState);//aca en estate se guarda el initial state con los productos. y si la llamamos devuelve el state cigual con el producto en el cart. se guarda aca para poder actualizar el state y agregarle cosas\n\n  const [products,setProducts] = useState([]); //aca vamos aguardar los productos que llamemos de la api de strapi\n\n\n  useLayoutEffect(() => {\n    \n    async function apiCall() {  //asi usamos el async function en el useEffect\n    const  response = await axios(API) // con axios se puede pero con fetch no\n    \n\n    setProducts(response.data) //guardamosen product el llamdo a la api\n\n    \n    }\n    // Execute the created function directly\n    apiCall();\n  }, []);\n\nconst addToCart = (payload) => {//esta funcion va a guardar en el carrito del state lo que le pasemos.\n   setState({ ...state,//aca se guardae en el estate el estado actualizado.\n    cart: [...state.cart, payload]//se guarda en carrito el producto que le pasemos.\n})\n}\n\nconst removeFromCart = (payload,indexToRemove) => {//esta funcion va a remover en el carrito del state lo que le pasemos.y si la llamamos de cuelve el estate igual con el cambio removido.\n    setState({ ...state,\n     cart: state.cart.filter((items,indexCurrent)=> indexCurrent !== indexToRemove) , //el filter devuelve solo los productos del carrito que sean distintos al id del producto que enviamos para remover. asi para que ya no este ese producto en el cart.\n })//vamosa usar un index para eliminar del carro para que solo se elimine uno y no todos los mismos productos, por lo tanto cada producto va a tner su index. y cuando toquemos eliminar va a enviar el numero que sigue ya que se suma de a 1 y cuando el index que queremos eliminar sea como uno de los que esta en cart no se devolvera por el filter.\n }\n\n const addToBuyer = (payload)=> {\nsetState({...state,\n    buyer:[...state.buyer, payload]//agregamos en el array de buyer le pasamos la info del formulario\n})\n }\n\nconst addNewOrder = (payload)=>{//guardanos la nueva orden ene el estado\n\n    setState({...state,\n        order:[...state.order,payload]\n\n    })\n}\n\n return{//este hook devuelve esto para poder usarlos si queremos, el estado con los productos actualizados o la funcion para quitar o agregar al carrito del state.\n     addToCart,\n     removeFromCart,\n     addToBuyer,\n     addNewOrder,\n    products, //todo esto devuelve el estado y esto se le pasa a la api de context para poder usarlo entoda la app\n     state //aca le pasamos el state a toda nuestra aplicacion luego de hacerle los cambios. esto que devuelve se usa en el app para darle el value al context.\n }\n\n}\n\nexport default useInitialState;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Layout from './components/Layout'\n\nimport Home from \"./pages/Home\";\nimport Information from \"./pages/Information\";\nimport Checkout from \"./pages/Checkout\";\nimport Payment from \"./pages/Payment\";\nimport Success from \"./pages/Success\";\nimport NotFound from \"./pages/NotFound\";\n\nimport AppContext from \"./context/AppContext\"\nimport useInitialState from \"./hooks/useInitialState\"\n\n\nconst App =() => {//aca estan las diferentes paginas\n\n  const initialState = useInitialState();//aca se ejecuta el hook para guardar en el initialstate el state y las funciones.\n\n  const isEmpty = Object.keys(initialState.state).length;\n\n  return (\n    <> {/*usamos react fragment */}\n     {/*hacemos esta validacion para saber si en elstate hay algo en el primer render ya que tiene que esperar que se haga el llamado de la api */}\n    {isEmpty > 0 ? (       \n      <AppContext.Provider value={initialState}>  {/*//aca se guarda een el value para poder acceder con el useState desde los componentes a initialState que tiene el estado y las funciones para cambiar el state . se pueden usar varios providers*/}\n    <BrowserRouter>\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/checkout\" component={Checkout} />   {/*info de lo que compramos*/}\n        <Route exact path=\"/checkout/information\" component={Information} />   {/*info del usuario que compra.. estas tres vienen desde la pagina checkout.*/}\n        <Route exact path=\"/checkout/payment\" component={Payment} />  {/* info del pago*/}\n        <Route exact path=\"/checkout/success\" component={Success} />   {/*compra hecha */}\n        <Route component={NotFound} />\n      </Switch>\n      </Layout>\n    </BrowserRouter> {/*//hay que poner el nombre de la variable que recibimos.*/}\n    </AppContext.Provider>)\n  : <h1>cargando...</h1>\n\n  }\n     </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//el value es el valor que se toma en el use context.\nReactDOM.render(\n\n  \n  \n    <App />\n  \n  \n ,//este es un provider que hay que pasarle el estado.\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}